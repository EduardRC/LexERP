@if (Item == null)
{
    <Cargando />
}
else
{
    <EditForm Model="Item">
        <DataAnnotationsValidator />
        <dl class="dl-horizontal">

            @if (Item.Id != 0)
            {
                <dt>Activo</dt>
                <dd>
                    <InputCheckbox class="form-control" @bind-Value="@Item.Activo" />
                    <ValidationMessage For="@(() => Item.Activo)" />
                </dd>
            }

            @if (seleccionCategoria)
            {
                <dt>Categoría: <button class="btn btn-link" @onclick="@(()=>seleccionCategoria=false)">Cambiar a usuario</button></dt>
                <dd>
                    <select class="form-control mb-2 mr-sm-2" @bind="@Item.Categoria.Id">
                        @foreach (var categoria in Categorias.OrderBy(x => x.Descripcion))
                        {
                            <option value="@categoria.Id">@categoria.Descripcion</option>
                        }
                    </select>
                </dd>
            }
            else
            {
                <dt>Usuario: <button class="btn btn-link" @onclick="@(()=>seleccionCategoria=true)">Cambiar a categoría</button></dt>
                <dd>
                    <select class="form-control mb-2 mr-sm-2" @bind="@Item.Usuario.Id">
                        @foreach (var usuario in Usuarios.OrderBy(x => x.Nombre))
                        {
                            <option value="@usuario.Id">@usuario.Nombre</option>
                        }
                    </select>
                </dd>
            }

            <dt>Precio Hora:</dt>
            <dd>
                <InputNumber class="form-control" @bind-Value="@Item.ImporteHora" />
                <ValidationMessage For="@(() => Item.ImporteHora)" />
            </dd>

            <dt>Fecha inicio:</dt>
            <dd>
                <InputDate class="form-control" @bind-Value="@Item.Fecha" />
                <ValidationMessage For="@(() => Item.Fecha)" />
            </dd>
        </dl>

    </EditForm>
    <hr />
    <button @onclick="Aceptar" class="btn btn-primary">Aceptar</button>
    <button @onclick="Cancelar" class="btn btn-secondary">Cancelar</button>
}


@code {

    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }

    [Parameter] public TarifaDetalleDTO Item { get; set; }
    [Parameter] public List<CategoriaDTO> Categorias { get; set; }
    [Parameter] public List<UsuarioDTOlist> Usuarios { get; set; }

    private bool seleccionCategoria;

    protected override void OnInitialized()
    {
        seleccionCategoria = Item.Usuario.Id == 0;
    }

    async Task Aceptar()
    {
        if (seleccionCategoria)
        {
            Item.Usuario.Id = 0;
        }
        else
        {
            Item.Categoria.Id = 0;
        }

        await BlazoredModal.CloseAsync(ModalResult.Ok(true));
    }
    async Task Cancelar() => await BlazoredModal.CancelAsync();


}
