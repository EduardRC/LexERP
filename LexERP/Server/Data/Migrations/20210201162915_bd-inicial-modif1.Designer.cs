// <auto-generated />
using System;
using LexERP.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LexERP.Server.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210201162915_bd-inicial-modif1")]
    partial class bdinicialmodif1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("ClienteServicio", b =>
                {
                    b.Property<int>("ClientesId")
                        .HasColumnType("int");

                    b.Property<int>("ServiciosId")
                        .HasColumnType("int");

                    b.HasKey("ClientesId", "ServiciosId");

                    b.HasIndex("ServiciosId");

                    b.ToTable("ClienteServicio");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ConsumedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Key");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.HasIndex("SubjectId", "SessionId", "Type");

                    b.ToTable("PersistedGrants");
                });

            modelBuilder.Entity("LexERP.Server.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Actuacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("ConceptoEconomicoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("ExpedienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Importe")
                        .HasColumnType("money");

                    b.Property<int>("Minutos")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioHora")
                        .HasColumnType("money");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Texto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoActuacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConceptoEconomicoId");

                    b.HasIndex("ExpedienteId");

                    b.HasIndex("TipoActuacionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Actuaciones");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Abreviatura")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("ParentId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<decimal>("ImporteHoraBase")
                        .HasColumnType("money");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Abreviatura")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<bool>("AplicarIVA")
                        .HasColumnType("bit");

                    b.Property<bool>("AplicarRetencion")
                        .HasColumnType("bit");

                    b.Property<int?>("CaptadorId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CodigoAlternativo")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("Empleados")
                        .HasColumnType("int");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<Guid>("IdPublico")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("NombreComercial")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int?>("ResponsableComercialId")
                        .HasColumnType("int");

                    b.Property<int?>("ResponsableFacturacionId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("TarifaId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorFacturacion")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("CaptadorId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ParentId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("ResponsableComercialId");

                    b.HasIndex("ResponsableFacturacionId");

                    b.HasIndex("TarifaId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.ConceptoEconomico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("FacturaId")
                        .HasColumnType("int");

                    b.Property<bool>("Facturable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IRPFImporte")
                        .HasColumnType("money");

                    b.Property<decimal>("IRPFTPC")
                        .HasColumnType("decimal(4,2)");

                    b.Property<decimal>("Importe")
                        .HasColumnType("money");

                    b.Property<decimal>("ImpuestoImporte")
                        .HasColumnType("money");

                    b.Property<decimal>("ImpuestoTPC")
                        .HasColumnType("decimal(4,2)");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Texto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoConceptoEconomico")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FacturaId");

                    b.HasIndex("ParentId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("ConceptosEconomicos");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Contacto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("Empleados")
                        .HasColumnType("int");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<Guid>("IdPublico")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal>("ValorFacturacion")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("PersonaId");

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("DiaFacturacion")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormaDePagoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Importe")
                        .HasColumnType("money");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PackHoras")
                        .HasColumnType("int");

                    b.Property<int>("Periodicidad")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("TarifaId")
                        .HasColumnType("int");

                    b.Property<string>("TextoFacturacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoContratoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioControlId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FormaDePagoId");

                    b.HasIndex("TarifaId");

                    b.HasIndex("TipoContratoId");

                    b.HasIndex("UsuarioControlId");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.DatoContacto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("TipoContactoId")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.HasIndex("TipoContactoId");

                    b.ToTable("DatosContacto");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Abreviatura")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Abreviatura")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("CodigoPostal")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("NIF")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poblacion")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Expediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<bool>("AlarmaSobrepasoEstimacion")
                        .HasColumnType("bit");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<bool>("Confidencial")
                        .HasColumnType("bit");

                    b.Property<int>("ContratoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("EstimacionHoras")
                        .HasColumnType("int");

                    b.Property<decimal>("EstimacionImporte")
                        .HasColumnType("money");

                    b.Property<bool>("Facturable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCierre")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdPublico")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ReferenciaCliente")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("ResponsableComercialId")
                        .HasColumnType("int");

                    b.Property<int?>("ResponsableFacturacionId")
                        .HasColumnType("int");

                    b.Property<int?>("ResponsableId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("SocioResponsableId")
                        .HasColumnType("int");

                    b.Property<int?>("TarifaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoExpedienteId")
                        .HasColumnType("int");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ContratoId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ParentId");

                    b.HasIndex("ResponsableComercialId");

                    b.HasIndex("ResponsableFacturacionId");

                    b.HasIndex("ResponsableId");

                    b.HasIndex("SocioResponsableId");

                    b.HasIndex("TarifaId");

                    b.HasIndex("TipoExpedienteId");

                    b.ToTable("Expedientes");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoPostal")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ejercicio")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("FacturaRectificadaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdPublica")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("MotivoRectificada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.Property<string>("Poblacion")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("Rectificada")
                        .HasColumnType("bit");

                    b.Property<bool>("Rectificativa")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Serie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalCobrada")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalGastos")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalHonorarios")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalProvisionesDevueltas")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalProvisionesRecibidas")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalSuplidos")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FacturaRectificadaId");

                    b.HasIndex("PaisId");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.FormaDePago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Abreviatura")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("FormasDePago");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Idioma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Abreviatura")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("Idiomas");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("IdiomaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("IdiomaId");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellidos")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Cargo")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Documento")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdiomaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Saludo")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("UbicacionPrincipalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("IdiomaId");

                    b.HasIndex("UbicacionPrincipalId");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("CodigoCliente")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<Guid>("IdPublico")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("PersonaId");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Sector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("Sectores");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Tarifa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Abreviatura")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Predeterminada")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Tarifas");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.TarifaDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ImporteHora")
                        .HasColumnType("money");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("TarifaId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("TarifaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TarifaDetalles");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.TipoActuacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Abreviatura")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("TextoActuacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoActuaciones");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.TipoContacto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("Clase")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("TipoContactos");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.TipoContrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Abreviatura")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("TipoContratos");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.TipoExpediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Abreviatura")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("TipoExpediente");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Ubicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("CodigoPostal")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("Poblacion")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.HasIndex("PersonaId");

                    b.ToTable("Ubicaciones");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellidos")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("EsCaptadorComisionista")
                        .HasColumnType("bit");

                    b.Property<bool>("EsResponsableComercial")
                        .HasColumnType("bit");

                    b.Property<bool>("EsResponsableExpediente")
                        .HasColumnType("bit");

                    b.Property<bool>("EsResponsableFacturacion")
                        .HasColumnType("bit");

                    b.Property<bool>("EsSocio")
                        .HasColumnType("bit");

                    b.Property<int?>("ExpedienteId")
                        .HasColumnType("int");

                    b.Property<string>("Iniciales")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime?>("ModificadoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("ExpedienteId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.UsuarioLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Info")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioLogs");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("PersonaSector", b =>
                {
                    b.Property<int>("PersonasId")
                        .HasColumnType("int");

                    b.Property<int>("SectoresId")
                        .HasColumnType("int");

                    b.HasKey("PersonasId", "SectoresId");

                    b.HasIndex("SectoresId");

                    b.ToTable("PersonaSector");
                });

            modelBuilder.Entity("LexERP.Server.Models.ApplicationRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.HasDiscriminator().HasValue("ApplicationRole");
                });

            modelBuilder.Entity("ClienteServicio", b =>
                {
                    b.HasOne("LexERP.Shared.Entities.Cliente", null)
                        .WithMany()
                        .HasForeignKey("ClientesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LexERP.Shared.Entities.Servicio", null)
                        .WithMany()
                        .HasForeignKey("ServiciosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Actuacion", b =>
                {
                    b.HasOne("LexERP.Shared.Entities.ConceptoEconomico", "ConceptoEconomico")
                        .WithMany("Actuaciones")
                        .HasForeignKey("ConceptoEconomicoId");

                    b.HasOne("LexERP.Shared.Entities.Expediente", "Expediente")
                        .WithMany()
                        .HasForeignKey("ExpedienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LexERP.Shared.Entities.TipoActuacion", "TipoActuacion")
                        .WithMany()
                        .HasForeignKey("TipoActuacionId");

                    b.HasOne("LexERP.Shared.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("ConceptoEconomico");

                    b.Navigation("Expediente");

                    b.Navigation("TipoActuacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Area", b =>
                {
                    b.HasOne("LexERP.Shared.Entities.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LexERP.Shared.Entities.Area", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Departamento");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Cliente", b =>
                {
                    b.HasOne("LexERP.Shared.Entities.Usuario", "Captador")
                        .WithMany()
                        .HasForeignKey("CaptadorId");

                    b.HasOne("LexERP.Shared.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LexERP.Shared.Entities.Cliente", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.HasOne("LexERP.Shared.Entities.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LexERP.Shared.Entities.Usuario", "ResponsableComercial")
                        .WithMany()
                        .HasForeignKey("ResponsableComercialId");

                    b.HasOne("LexERP.Shared.Entities.Usuario", "ResponsableFacturacion")
                        .WithMany()
                        .HasForeignKey("ResponsableFacturacionId");

                    b.HasOne("LexERP.Shared.Entities.Tarifa", "Tarifa")
                        .WithMany()
                        .HasForeignKey("TarifaId");

                    b.Navigation("Captador");

                    b.Navigation("Empresa");

                    b.Navigation("Parent");

                    b.Navigation("Persona");

                    b.Navigation("ResponsableComercial");

                    b.Navigation("ResponsableFacturacion");

                    b.Navigation("Tarifa");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.ConceptoEconomico", b =>
                {
                    b.HasOne("LexERP.Shared.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("LexERP.Shared.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LexERP.Shared.Entities.Factura", "Factura")
                        .WithMany("LineasFactura")
                        .HasForeignKey("FacturaId");

                    b.HasOne("LexERP.Shared.Entities.ConceptoEconomico", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.HasOne("LexERP.Shared.Entities.Proveedor", "Proveedor")
                        .WithMany("Conceptos")
                        .HasForeignKey("ProveedorId");

                    b.Navigation("Cliente");

                    b.Navigation("Empresa");

                    b.Navigation("Factura");

                    b.Navigation("Parent");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Contacto", b =>
                {
                    b.HasOne("LexERP.Shared.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LexERP.Shared.Entities.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Contrato", b =>
                {
                    b.HasOne("LexERP.Shared.Entities.Cliente", "Cliente")
                        .WithMany("Contratos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LexERP.Shared.Entities.FormaDePago", "FormaDePago")
                        .WithMany()
                        .HasForeignKey("FormaDePagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LexERP.Shared.Entities.Tarifa", "Tarifa")
                        .WithMany()
                        .HasForeignKey("TarifaId");

                    b.HasOne("LexERP.Shared.Entities.TipoContrato", "TipoContrato")
                        .WithMany()
                        .HasForeignKey("TipoContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LexERP.Shared.Entities.Usuario", "UsuarioControl")
                        .WithMany()
                        .HasForeignKey("UsuarioControlId");

                    b.Navigation("Cliente");

                    b.Navigation("FormaDePago");

                    b.Navigation("Tarifa");

                    b.Navigation("TipoContrato");

                    b.Navigation("UsuarioControl");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.DatoContacto", b =>
                {
                    b.HasOne("LexERP.Shared.Entities.Persona", "Persona")
                        .WithMany("DatosContacto")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LexERP.Shared.Entities.TipoContacto", "TipoContacto")
                        .WithMany()
                        .HasForeignKey("TipoContactoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");

                    b.Navigation("TipoContacto");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Expediente", b =>
                {
                    b.HasOne("LexERP.Shared.Entities.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LexERP.Shared.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("LexERP.Shared.Entities.Contrato", "Contrato")
                        .WithMany("Expedientes")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LexERP.Shared.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId");

                    b.HasOne("LexERP.Shared.Entities.Expediente", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.HasOne("LexERP.Shared.Entities.Usuario", "ResponsableComercial")
                        .WithMany()
                        .HasForeignKey("ResponsableComercialId");

                    b.HasOne("LexERP.Shared.Entities.Usuario", "ResponsableFacturacion")
                        .WithMany()
                        .HasForeignKey("ResponsableFacturacionId");

                    b.HasOne("LexERP.Shared.Entities.Usuario", "Responsable")
                        .WithMany()
                        .HasForeignKey("ResponsableId");

                    b.HasOne("LexERP.Shared.Entities.Usuario", "SocioResponsable")
                        .WithMany()
                        .HasForeignKey("SocioResponsableId");

                    b.HasOne("LexERP.Shared.Entities.Tarifa", "Tarifa")
                        .WithMany()
                        .HasForeignKey("TarifaId");

                    b.HasOne("LexERP.Shared.Entities.TipoExpediente", "TipoExpediente")
                        .WithMany()
                        .HasForeignKey("TipoExpedienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Cliente");

                    b.Navigation("Contrato");

                    b.Navigation("Empresa");

                    b.Navigation("Parent");

                    b.Navigation("Responsable");

                    b.Navigation("ResponsableComercial");

                    b.Navigation("ResponsableFacturacion");

                    b.Navigation("SocioResponsable");

                    b.Navigation("Tarifa");

                    b.Navigation("TipoExpediente");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Factura", b =>
                {
                    b.HasOne("LexERP.Shared.Entities.Cliente", "Cliente")
                        .WithMany("Facturas")
                        .HasForeignKey("ClienteId");

                    b.HasOne("LexERP.Shared.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LexERP.Shared.Entities.Factura", "FacturaRectificada")
                        .WithMany()
                        .HasForeignKey("FacturaRectificadaId");

                    b.HasOne("LexERP.Shared.Entities.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empresa");

                    b.Navigation("FacturaRectificada");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Pais", b =>
                {
                    b.HasOne("LexERP.Shared.Entities.Idioma", "Idioma")
                        .WithMany()
                        .HasForeignKey("IdiomaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Idioma");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Persona", b =>
                {
                    b.HasOne("LexERP.Shared.Entities.Cliente", null)
                        .WithMany("Contactos")
                        .HasForeignKey("ClienteId");

                    b.HasOne("LexERP.Shared.Entities.Idioma", "Idioma")
                        .WithMany()
                        .HasForeignKey("IdiomaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LexERP.Shared.Entities.Ubicacion", "UbicacionPrincipal")
                        .WithMany()
                        .HasForeignKey("UbicacionPrincipalId");

                    b.Navigation("Idioma");

                    b.Navigation("UbicacionPrincipal");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Proveedor", b =>
                {
                    b.HasOne("LexERP.Shared.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LexERP.Shared.Entities.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Tarifa", b =>
                {
                    b.HasOne("LexERP.Shared.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.TarifaDetalle", b =>
                {
                    b.HasOne("LexERP.Shared.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.HasOne("LexERP.Shared.Entities.Tarifa", "Tarifa")
                        .WithMany()
                        .HasForeignKey("TarifaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LexERP.Shared.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Categoria");

                    b.Navigation("Tarifa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Ubicacion", b =>
                {
                    b.HasOne("LexERP.Shared.Entities.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LexERP.Shared.Entities.Persona", null)
                        .WithMany("Ubicaciones")
                        .HasForeignKey("PersonaId");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Usuario", b =>
                {
                    b.HasOne("LexERP.Shared.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.HasOne("LexERP.Shared.Entities.Departamento", "Departamento")
                        .WithMany("Usuarios")
                        .HasForeignKey("DepartamentoId");

                    b.HasOne("LexERP.Shared.Entities.Expediente", null)
                        .WithMany("Usuarios")
                        .HasForeignKey("ExpedienteId");

                    b.Navigation("Categoria");

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.UsuarioLog", b =>
                {
                    b.HasOne("LexERP.Shared.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LexERP.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LexERP.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LexERP.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LexERP.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PersonaSector", b =>
                {
                    b.HasOne("LexERP.Shared.Entities.Persona", null)
                        .WithMany()
                        .HasForeignKey("PersonasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LexERP.Shared.Entities.Sector", null)
                        .WithMany()
                        .HasForeignKey("SectoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Area", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Cliente", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Contactos");

                    b.Navigation("Contratos");

                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.ConceptoEconomico", b =>
                {
                    b.Navigation("Actuaciones");

                    b.Navigation("Children");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Contrato", b =>
                {
                    b.Navigation("Expedientes");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Departamento", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Expediente", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Factura", b =>
                {
                    b.Navigation("LineasFactura");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Persona", b =>
                {
                    b.Navigation("DatosContacto");

                    b.Navigation("Ubicaciones");
                });

            modelBuilder.Entity("LexERP.Shared.Entities.Proveedor", b =>
                {
                    b.Navigation("Conceptos");
                });
#pragma warning restore 612, 618
        }
    }
}
